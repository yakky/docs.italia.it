# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2019-09-17 11:49
from __future__ import unicode_literals

from django.db import migrations

from readthedocs.docsitalia.models import AllowedTag

ALLOWED_TAGS = [
    'ambiente',
    'agricoltura',
    'agroalimentare',
    'anagrafe',
    'appalti',
    'arte',
    'assicurazioni',
    'associazionismo',
    'atti',
    'avvisi',
    'bandi',
    'biblioteche',
    'big data',
    'bilancio',
    'certificati',
    'circolari',
    'clima',
    'commercio',
    'comuni',
    'comunicazione',
    'concorrenza',
    'contenuti',
    'consultazioni',
    'cooperazione',
    'costituzione',
    'credito',
    'cultura',
    'design',
    'difesa',
    'direttive',
    "diritto d'autore",
    'economia',
    'editoria',
    'elezioni',
    'emergenze',
    'energia',
    'enti locali',
    'esteri',
    'europa',
    'eventi',
    'gare',
    'giustizia',
    'governo',
    'guide',
    'ICT',
    'immigrazione',
    'imprenditoria',
    'incentivi',
    'inclusione',
    'industria',
    'informazione',
    'infrastrutture',
    'investimenti',
    'istituzioni',
    'istruzione',
    'grandi opere',
    'lavori pubblici',
    'lavoro',
    'linee guida',
    'manuali utente',
    'ministeri',
    'normative',
    'open data',
    'open source',
    'pagamenti',
    'pari opportunità',
    'parlamento',
    'previdenza',
    'presidente della repubblica',
    'privacy',
    'procedure',
    'prodotti',
    'progetti',
    'protezione civile',
    'province',
    'regioni',
    'regolamenti',
    'ricerca',
    'rifiuti',
    'riforme',
    'salute',
    'scuole',
    'senato',
    'servizi',
    'servizi sociali',
    'servizio civile',
    'sicurezza',
    'software',
    'sport',
    'stampa',
    'sviluppatori',
    'territorio',
    'transizione digitale',
    'trasparenza',
    'trasporti',
    'trattati',
    'tributi',
    'turismo',
    'università',
    'urbanistica',
    'volontariato',
]


class Migration(migrations.Migration):

    dependencies = [
        ('docsitalia', '0014_allowedtag'),
    ]

    operations = [
        migrations.RunPython(
            lambda apps, schema_editor: AllowedTag.objects.bulk_create(
                [AllowedTag(name=tag, enabled=True) for tag in ALLOWED_TAGS],
            ),
        ),
    ]
